Game of Life - Performance Timing

ORIGINAL sequential gol
~~~~~~~~~~~~~~~~~~~~~~~~
time gol 10000 generations over 1k grid:
111.34 real
111.17user 0.00system 1:51.28elapsed 99%cpu
    (0avgtext+0avgdata 4400maxresident)k
    0inputs+4104outputs
    (0major+1098minor)pagefaults 0swaps
110.76 real
110.53 real
110.65 real

1k  avg = 110.89
512 avg = 25.83
128 avg = 1.62

GOAL
~~~~~
goal for 1k: 27.7s (4x) [50%]; 13.8s (8x) [80%]
gprof compiled runtime = 115.35 real
gcov compiled runtime = 304.38 real


SWAP LOOP ORDER
~~~~~~~~~~~~~~~~
Swapping the loop order, s.t. j is outer loop, i is inner loop (cols then rows)
1k  = ~100  (1.11)
512 = 25.12 (1.03)
128 = 1.58  (1.02)

SLIDING WINDOW v1
~~~~~~~~~~~~~~~~~~
Avoid unecessary reads from inboard by only performing reads for the cells
on the leading edge of the sliding 3x3 game box
1k  = 78.98 (1.40)
512 = 18.18 (1.42)
128 = 0.903 (1.79)

SLIDING WINDOW v2
~~~~~~~~~~~~~~~~~~
Less local variables, combine nw+sw into tbw, etc.
Tried loop unrolling to 3 stages, time jumped to ~12s
1k  = 47.73 (2.32)
512 = 11.09 (2.33)
128 = 0.32  (5.06)

PARALLEL sliding window
~~~~~~~~~~~~~~~~~~~~~~~~
Parallelize with NUM_THREADS, assign block or rows to each thread_worker
1k  = 11.3 (9.81)
512 = 3.22 (8.02)
128 = 0.66 (2.45)

BARRIERS parll slidingWdw
~~~~~~~~~~~~~~~~~~~~~~~~~~
Add barriers between generations instead of fork-join every generation
1k  = 4.61 (24.05)
512 = 1.21 (21.35)
128 = 0.15 (10.8)

LOOP UNROLL sliding window
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Loop unrolled the sliding window
1k  = 4.04 (27.45)
512 = 1.09 (23.69)
128 = 0.12 (13.5)

LOOP UNROLL x8
~~~~~~~~~~~~~~~
Similar to above
1k  = 3.93 (28.2)
512 = 1.03 (25.1)
128 = 0.13 (12.5)

